# Copyright (C) 2021 - present Juergen Zimmermann, Hochschule Karlsruhe
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

# siehe app.module.ts

schema {
  query: Query
  mutation: Mutation
}

"Funktionen, um Laptopsdaten zu lesen"
type Query {
  laptops(suchkriterien: SuchkriterienInput): [Laptop!]

  laptop(id: ID!): Laptop
}

"Funktionen, um Laptops neu anzulegen, zu aktualisieren oder zu löschen"
type Mutation {
  create(input: LaptopInput!): CreatePayload

  update(input: LaptopUpdateInput!): UpdatePayload

  delete(id: ID!): Boolean

  # Mutation, wenn z.B. der Login-Zeitpunkt im IDM-System gespeichert wird
  token(username: String!, password: String!): TokenResult
  refresh(refresh_token: String!): TokenResult
}

"Daten zum Marke eines Laptops"
type Marke {
  marke: String!
  reihe: String
}

"Daten zum LaptopBild eines Laptops"
type LaptopBild {
  beschriftung: String!
  contentType: String
}

"Datenschema zu einem Laptop, das gelesen wird"
type Laptop {
  # ID ist bei Apollo ein String
  id: Int!
  version: Int!
  modellnummer: String!
  art: Art
  preis: Float!
  lieferbar: Boolean
  datum: String
  homepage: String
  merkmale: [String]
  # 1:1-Beziehung
  marke: Marke!
  # field mit @ResolveField
  rabatt(short: Boolean): String!
}

"Enum-Typ für die Art eines Laptops"
enum Art {
  ULTRABOOK
  GAMING
  BUSINESS
}

"Suchkriterien für Laptops"
input SuchkriterienInput {
  marke: String
  modellnummer: String
  art: Art
  lieferbar: Boolean
}

"Daten zum Marke eines neuen laptops"
input MarkeInput {
  marke: String!
  reihe: String
}

"Daten zu den LaptopBilden eines Laptops"
input LaptopBildInput {
  beschriftung: String!
  contentType: String!
}

"Daten für ein neues Laptop"
input LaptopInput {
  modellnummer: String
  art: Art
  preis: Float
  rabatt: Float
  lieferbar: Boolean
  datum: String
  homepage: String
  merkmale: [String]
  marke: MarkeInput!
  laptopNilden: [LaptopBildInput!]
}

type CreatePayload {
  id: Int
}

"Daten für ein zu änderndes Laptop"
input LaptopUpdateInput {
  id: ID
  version: Int
  modellnummer: String
  art: Art
  preis: Float
  rabatt: Float
  lieferbar: Boolean
  datum: String
  homepage: String
  merkmale: [String]
}

type UpdatePayload {
  version: Int
}

type TokenResult {
  access_token: String!
  expires_in: Int!
  refresh_token: String!
  refresh_expires_in: Int!
}
